{"version":3,"sources":["logo.svg","Constants.js","App.js","features/signin/signinSlice.js","features/dashboard/dashboardSlice.js","4428859.svg","features/signin/Signin.js","features/tickets/ticketSlice.js","features/tickets/ticket.js","features/ticket-nouveau/ticketNouveauSlice.js","features/ticket-nouveau/ticketNouveau.js","features/ticket-encours/ticketEnCoursSlice.js","features/ticket-encours/ticketEnCours.js","features/ticket-termines/ticketTermineSlice.js","features/ticket-termines/ticketTermine.js","features/singleTicket/singleTicketSlice.js","features/singleTicket/singleTicket.js","features/ticket-validation/ticketValidationSlice.js","features/ticket-validation/ticketValidation.js","features/ticket-archived/ticketArchivedSlice.js","features/ticket-archived/ticketArchived.js","features/dashboard/Dashboard.js","app/store.js","serviceWorker.js","index.js"],"names":["ticketsUrl","base_url","updateTicketsEnCoursUrl","RangePicker","DatePicker","Select","Option","React","Component","signinSlice","createSlice","name","initialState","fetchSigninResult","fetchSigninError","isFetchingSignin","redirectToDashboard","reducers","initSignin","state","action","setSigninResult","payload","setSigninError","setFetchingSignin","actions","fetchSignin","data","dispatch","getState","config","method","url","headers","axios","then","response","localStorage","setItem","accessJWT","console","log","catch","message","dashboardSlice","fetchProfileResult","fetchProfileError","isFetchingProfile","value","pathname","token","setPathname","setProfileResult","setProfileError","setFetchingProfile","antIcon","Typography","Title","Paragraph","Text","LoadingOutlined","style","fontSize","spin","Signin","useState","email","password","remember","setState","useDispatch","useSelector","signin","signInResult","useEffect","handleKeyDown","e","keyCode","userType","to","justify","align","height","xs","padding","div","initial","y","animate","x","transition","duration","repeat","type","marginLeft","marginRight","marginTop","minHeight","Display","alignItems","justifyContent","src","width","alignSelf","marginBottom","className","Item","rules","required","onChange","target","prefix","UserOutlined","placeholder","onKeyDown","Password","LockOutlined","valuePropName","noStyle","banner","indicator","htmlType","onClick","backgroundImage","Background","backgroundRepeat","backgroundAttachment","backgroundPosition","backgroundSize","backgroundColor","boxShadow","usersSlice","fetchTicketsResult","fetchTicketsError","isFetchingTickets","nbreOfDocs","filters","page","setTicketsResult","setTicketsError","setFetchingTickets","setFilters","setPage","fetchTickets","Authorization","TextArea","Input","Contt","children","extra","Clients","history","useHistory","dataIndex","tickets","searchInput","useRef","subject","description","deadline","visible","addNew","setAddNew","handleSearch","selectedKeys","confirm","searchedColumn","searchText","handleReset","clearFilters","columns","title","key","filterDropdown","setSelectedKeys","ref","node","onPressEnter","display","icon","SearchOutlined","size","filterIcon","filtered","color","undefined","onFilterDropdownVisibleChange","setTimeout","select","render","text","highlightStyle","searchWords","autoEscape","textToHighlight","toString","moment","format","filterMultiple","onFilter","record","status","indexOf","filterSearch","Nouveau","termine","toUpperCase","EditOutlined","push","_id","gutter","span","margin","background","maxHeight","PlusOutlined","CheckCircleOutlined","result","map","element","downloaded","notification","info","placement","switcher","checkedChildren","unCheckedChildren","defaultunChecked","centered","onOk","subjet","error","my_edit","a","success","onCancel","okText","cancelText","rows","dateString","pagination","rowKey","tableLayout","dataSource","loading","length","ticketsSlice","isFetchingNewTickets","updateTicket","setNewTicketsResult","setNewTicketsError","setFetchingNewTickets","SetUpdateTicketStatus","updateTicketStatus","fetchNewTickets","newTickets","onConfirm","borderRadius","backdropFilter","isFetchingEncoursTickets","setEncoursTicketsResult","setEncoursTicketsError","setFetchingEncoursTickets","fetchEncoursTickets","encoursTickets","termineTickets","singleTicketSlice","fetchSingleTicketResult","fetchUploadZipFileResult","fetchUploadZipFileError","isFetchingUploadZipFile","setSingleTicketResult","isFetchingSingleTicket","setSingleTicketError","fetchSingleTicketError","setFetchingSingleTicket","setUploadZipFileResult","setUploadZipFileError","setFetchingUploadZipFile","fetchSingleTicket","useParams","singleTicket","fetchuploadresult","notes","disabled","setNotes","uploadProps","onRemove","file","index","fileList","newFileList","slice","splice","beforeUpload","formData","FormData","append","post","path","fetchUploadZipFile","goBack","layout","bordered","column","xxl","xl","lg","md","sm","label","openAt","border","for","UploadOutlined","showIcon","closable","Link","offset","endAt","window","open","base_url2","zipFile","ticketsArchived","Header","Layout","Sider","Footer","Dashboard","Menu","SubMenu","collapsed","current","dashboard","user","location","content","block","shape","removeItem","LogoutOutlined","AvatarProfile","trigger","dot","collapsible","onCollapse","theme","defaultSelectedKeys","mode","onSelect","overflow","AlignLeftOutlined","FileProtectOutlined","SendOutlined","SafetyCertificateOutlined","overflowY","count","spinning","exact","component","Tickets","SingleTicket","TicketsArchive","ValidateTicket","PendingTickets","EncoursTickets","TermineTickets","configureStore","reducer","signinReducer","ticketsReducer","dashboardReducer","newTicketsReducer","encoursTicketsReducer","singleTicketReducer","termineTicketsReducer","ticketsArchivedReducer","Boolean","hostname","match","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc8a1b82.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","const base_url = \"/api/v1/\";\nconst base_url2 = \"/\";\nexport const downloadFileZipUrl = base_url2 + \"download/\";\n\nexport const ticketsUrl = base_url + \"tickets\";\nexport const readyTicketsUrl = base_url + \"tickets/ready\";\nexport const archivedTicketsUrl = base_url + \"tickets/archived\";\nexport const newTicketsUrl = base_url + \"tickets/newTickets\";\nexport const getSingleTicketUrl = base_url + \"tickets/single/\";\nexport const signInUrl = base_url + \"users/login\";\nexport const profile_url = base_url + \"users/\";\nexport const updateTicketsEnCoursUrl = base_url + \"tickets/encours/\";\nexport const ticketsEncoursUrl = base_url + \"tickets/encours/\";\nexport const ticketsTerminesUrl = base_url + \"tickets/termine/\";\nexport const uploadZipFileUrl = base_url + \"upload/upload\";\nexport const updateTicketsCloseUrl = base_url + \"tickets/encours/close\";\nexport const updateDownloadedStatusUrl = base_url + \"tickets/termine/\";\n","import logo from './logo.svg';\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport \"react-datetime/css/react-datetime.css\";\nimport { Bar } from '@ant-design/charts';\nimport 'antd/dist/antd.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport moment from 'moment';\nimport { DatePicker, Space, Select, Pagination, Button } from 'antd';\nimport { count_logs_url, search_logs_url, logs_stats_url } from './Constants';\nimport { Redirect } from \"react-router-dom\";\nconst { RangePicker } = DatePicker;\nconst { Option } = Select;\n\n\n\nclass App extends React.Component {\n\n  handleChangeDateSimple(event) {\n    if (event === null) {\n      this.getData();\n    }\n    else {\n      this.setState({ start_full_date: event[0].format() });\n      this.setState({ end_full_date: event[1].format() });\n      this.getData();\n      this.getNPages();\n    }\n\n  }\n  \n  render() {\n\n    if ( localStorage.token === undefined || localStorage.token === null){ \n      return <Redirect to=\"/login\"></Redirect>;\n    }\n    let disabler;\n    let datePicker;\n    let config;\n    let data\n    \n      datePicker = <RangePicker showTime onChange={this.handleChangeDateSimple} />\n      disabler = false;\n    \n    \n    return (\n      <div className=\"App\" >\n        <header className=\"App-header\">\n          \n         </header>\n      </div>\n    );\n  }\n}\n\nexport default App;","import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { signInUrl } from \"../../Constants\";\n\nexport const signinSlice = createSlice({\n  name: \"signin\",\n  initialState: {\n    fetchSigninResult: null,\n    fetchSigninError: null,\n    isFetchingSignin: false,\n    redirectToDashboard: false,\n  },\n  reducers: {\n    initSignin: (state, action) => {\n      state.fetchSigninResult = null;\n      state.isFetchingSignin = false;\n      state.fetchSigninError = null;\n      state.redirectToDashboard = false;\n    },\n    setSigninResult: (state, action) => {\n      state.fetchSigninResult = action.payload;\n      state.isFetchingSignin = false;\n      state.redirectToDashboard = true;\n    },\n    setSigninError: (state, action) => {\n      state.fetchSigninError = action.payload;\n      state.isFetchingSignin = false;\n    },\n    setFetchingSignin: (state, action) => {\n      state.isFetchingSignin = action.payload;\n    },\n  },\n});\n\nexport const {\n  setSigninResult,\n  setSigninError,\n  setFetchingSignin,\n  initSignin,\n} = signinSlice.actions;\n\nexport const fetchSignin = (data) => (dispatch, getState) => {\n  const config = {\n    method: \"post\",\n    url: signInUrl,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    data,\n  };\n\n  dispatch(setFetchingSignin(true));\n  const response = axios(config)\n    .then((response) => {\n      localStorage.setItem(\"token\", response.data.accessJWT);\n      console.log(\"token\", response.data.accessJWT);\n      dispatch(setSigninResult(response.data));\n    })\n    .catch((response) => {\n      dispatch(setSigninError(response.message));\n    });\n\n  return response.data;\n};\n\nexport default signinSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { profile_url } from \"../../Constants\";\n\nexport const dashboardSlice = createSlice({\n  name: \"dashboard\",\n  initialState: {\n    fetchProfileResult: null,\n    fetchProfileError: null,\n    isFetchingProfile: false,\n    value: 2,\n    pathname: \"/\",\n    token: localStorage.token,\n  },\n  reducers: {\n    setPathname: (state, action) => {\n      state.pathname = action.payload;\n    },\n    setProfileResult: (state, action) => {\n      state.fetchProfileResult = action.payload;\n      state.isFetchingProfile = false;\n    },\n    setProfileError: (state, action) => {\n      state.fetchProfileError = action.payload;\n      state.isFetchingProfile = false;\n    },\n    setFetchingProfile: (state, action) => {\n      state.isFetchingProfile = action.payload;\n    },\n  },\n});\n\nexport const {\n  setPathname,\n  setProfileResult,\n  setProfileError,\n  setFetchingProfile,\n} = dashboardSlice.actions;\n\nexport const fetchUserProfile = () => (dispatch, getState) => {\n  const config = {\n    method: \"get\",\n    url: profile_url,\n    headers: {\n      Authorization: localStorage.token,\n    },\n  };\n  dispatch(setFetchingProfile(true));\n  const response = axios(config)\n    .then((response) => {\n      dispatch(setProfileResult(response.data));\n      console.log(\"user\", response.data, localStorage.token);\n    })\n    .catch((response) => {\n      dispatch(setProfileError(response.message));\n      console.log(\"user\", response.data);\n    });\n\n  return response.data;\n};\n\n// export const incrementAsync = (amount) => (dispatch) => {\n//   setTimeout(() => {\n//     dispatch(incrementByAmount(amount));\n//   }, 1000);\n// };\n\n// export const selectCount = (state) => state.dashboard.value;\n\nexport default dashboardSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/4428859.e1223b80.svg\";","import {\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Row,\n  Col,\n  Typography,\n  Spin,\n  Alert,\n} from \"antd\";\nimport { motion } from \"framer-motion\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport \"./signin.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { fetchSignin, setSigninError, initSignin } from \"./signinSlice\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { fetchUserProfile } from \"../dashboard/dashboardSlice\";\nimport Background from \"../../4428859.svg\";\nconst { Title, Paragraph, Text } = Typography;\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nconst Signin = () => {\n  const [state, setState] = React.useState({\n    email: \"\",\n    password: \"\",\n    remember: false,\n  });\n\n  const dispatch = useDispatch();\n\n  const fetchSigninError = useSelector(\n    (state) => state.signin.fetchSigninError\n  );\n  const signInResult = useSelector((state) => state.signin.fetchSigninResult);\n  console.log(\"signInResult\", signInResult);\n  const isFetchingSignin = useSelector(\n    (state) => state.signin.isFetchingSignin\n  );\n  const redirectToDashboard = useSelector(\n    (state) => state.signin.redirectToDashboard\n  );\n\n  React.useEffect(() => {\n    dispatch(initSignin());\n  }, []);\n\n  // if (redirectToDashboard) {\n  //   dispatch(fetchUserProfile());\n  // }\n\n  const handleKeyDown = (e) => {\n    console.log(e.keyCode);\n    if (fetchSigninError !== null) dispatch(setSigninError(null));\n\n    if (e.keyCode === 13) dispatch(fetchSignin(state));\n  };\n\n  const handleSigninClick = (e) => {\n    dispatch(fetchSignin(state));\n  };\n  if (signInResult?.userType === \"assistantDz\")\n    return <Redirect to=\"/dashboard/tickets/pending\" />;\n  if (signInResult?.userType === \"assistantFr\")\n    return <Redirect to=\"/dashboard/tickets\" />;\n  return (\n    <Row justify=\"center\" align=\"middle\" style={{ height: \"100vh\" }}>\n      <Col xs={12} style={{ padding: \"0px 128px 128px 128px\" }}>\n        <motion.div\n          initial={{ y: 10 }}\n          animate={{ y: [-10.55, -10.3], x: [-10, 10, -10, 0] }}\n          transition={{ duration: 1, repeat: 0, type: \"spring\" }}\n        >\n          <div\n            style={{\n              marginLeft: \"20%\",\n              marginRight: \"20%\",\n              marginTop: \"30%\",\n              minHeight: \"50vh\",\n              Display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <img\n              src=\"https://gw.alipayobjects.com/zos/antfincdn/aPkFc8Sj7n/method-draw-image.svg\"\n              width={150}\n              style={{\n                alignSelf: \"center\",\n                marginLeft: \"30%\",\n                marginBottom: \"20%\",\n              }}\n              className=\"center\"\n            ></img>\n            <h3 style={{ marginBottom: 32, marginLeft:30 }}>Connectez-vous!</h3>\n            <Form name=\"normal_login\" className=\"register-form\">\n              <Form.Item\n                name=\"Email\"\n                rules={[\n                  { required: true, message: \"Please input your Email!\" },\n                ]}\n              >\n                <Input\n                  value={state.email}\n                  onChange={(e) =>\n                    setState({ ...state, email: e.target.value })\n                  }\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"Email\"\n                  onKeyDown={handleKeyDown}\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"password\"\n                rules={[\n                  { required: true, message: \"Please input your Password!\" },\n                ]}\n              >\n                <Input.Password\n                  value={state.password}\n                  onChange={(e) =>\n                    setState({ ...state, password: e.target.value })\n                  }\n                  onKeyDown={handleKeyDown}\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n              </Form.Item>\n              <Form.Item>\n                <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                  <Checkbox>Remember me</Checkbox>\n                </Form.Item>\n              </Form.Item>\n              {fetchSigninError ? (\n                <Form.Item>\n                  <Alert\n                    type=\"error\"\n                    message=\"Incorrect Email Or Password\"\n                    banner\n                  />\n                </Form.Item>\n              ) : null}\n\n              <Form.Item>\n                {isFetchingSignin ? (\n                  <Spin indicator={antIcon}>\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      className=\"login-form-button\"\n                      style={{ width: \"100%\" }}\n                    >\n                      Log in\n                    </Button>\n                  </Spin>\n                ) : (\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"login-form-button\"\n                    style={{ width: \"100%\" }}\n                    onClick={handleSigninClick}\n                  >\n                    Login\n                  </Button>\n                )}\n              </Form.Item>\n            </Form>\n          </div>\n        </motion.div>\n      </Col>\n      <Col\n        xs={12}\n        style={{\n          backgroundImage: `url(${Background})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundAttachment: \"fixed\",\n          backgroundPosition: \"right center\",\n          backgroundSize: \"50%\",\n          height: \"100vh\",\n          backgroundColor: \"#01488f\",\n          boxShadow: \"-7px 1px 26px -2px rgba(0,0,0,0.78)\",\n        }}\n      ></Col>\n    </Row>\n  );\n};\n\nexport default Signin;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { ticketsUrl, readyTicketsUrl } from \"../../Constants\";\nimport axios from \"axios\";\nimport { message } from \"antd\";\nimport { act } from \"@testing-library/react\";\n\nconst initState = {\n  fetchTicketsResult: null,\n  fetchTicketsError: null,\n  isFetchingTickets: false,\n  value: 2,\n  pathname: \"/\",\n  nbreOfDocs: 0,\n  filters: null,\n  page: 1,\n};\n\nexport const usersSlice = createSlice({\n  name: \"Tickets\",\n  initialState: initState,\n  reducers: {\n    setPathname: (state, action) => {\n      state.pathname = action.payload;\n    },\n    setTicketsResult: (state, action) => {\n      state.fetchTicketsResult = action.payload;\n      if (action.payload.nbreOfDocs)\n        state.nbreOfDocs = action.payload.nbreOfDocs;\n      state.isFetchingTickets = false;\n    },\n    setTicketsError: (state, action) => {\n      state.fetchTicketsError = action.payload;\n      state.isFetchingTickets = false;\n    },\n    setFetchingTickets: (state, action) => {\n      if (action.payload) {\n        state.fetchTicketsError = null;\n        state.fetchTicketsResult = null;\n      }\n      state.isFetchingTickets = action.payload;\n    },\n    setFilters: (state, action) => {\n      state.filters = action.payload;\n    },\n    setPage: (state, action) => {\n      state.page = action.payload;\n    },\n  },\n});\n\nexport const {\n  setPathname,\n  setTicketsResult,\n  setTicketsError,\n  setFetchingTickets,\n  setFilters,\n  setPage,\n} = usersSlice.actions;\n\nexport const fetchTickets = (data) => (dispatch, getState) => {\n  const config = {\n    method: \"get\",\n    url: readyTicketsUrl,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.token,\n    },\n    data,\n  };\n  dispatch(setFetchingTickets(true));\n\n  const response = axios(config)\n    .then((response) => {\n      dispatch(setTicketsResult(response.data));\n    })\n    .catch((response) => {\n      dispatch(setTicketsError(response.message));\n    });\n\n  return response.data;\n};\n// --------------------------------------------\n// --------------------------------------------\nexport const AddnewTicket = (data) => async (dispatch, getState) => {\n  const config = {\n    method: \"post\",\n    url: ticketsUrl,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.token,\n    },\n    data,\n  };\n\n  const response = await axios(config)\n    .then((response) => {\n      message.success(\"Ticket added successfully\");\n      dispatch(fetchTickets());\n    })\n    .catch((response) => {\n      message.error(\"Error while adding the ticket \");\n    });\n\n  return response;\n};\n// ---------------------------------------------------------------------\n// --------------------------------------------------------------------\n\nexport const selectCount = (state) => state.dashboard.value;\n\nexport default usersSlice.reducer;\n","import React, { useRef, useState } from \"react\";\nimport {\n  Button,\n  Row,\n  Col,\n  Input,\n  Space,\n  Breadcrumb,\n  Radio,\n  Table,\n  Spin,\n  notification,\n  DatePicker,\n  Tag,\n  message,\n} from \"antd\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport {\n  SearchOutlined,\n  PlusOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from \"@ant-design/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchTickets, setFilters, setPage, AddnewTicket } from \"./ticketSlice\";\nimport Highlighter from \"react-highlight-words\";\nimport Title from \"antd/lib/skeleton/Title\";\nimport { Switch } from \"react-router-dom\";\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\nimport { Footer } from \"antd/lib/layout/layout\";\nimport moment from \"moment\";\nimport {\n  useHistory,\n  useParams,\n} from \"react-router-dom/cjs/react-router-dom.min\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Select } from \"antd\";\nconst { TextArea } = Input;\n\nconst Contt = ({ children, extra }) => {\n  return (\n    <div className=\"content\">\n      <div className=\"main\">{children}</div>\n      <div className=\"extra\">{extra}</div>\n    </div>\n  );\n};\nconst { RangePicker } = DatePicker;\nconst Clients = () => {\n  let history = useHistory();\n  const [state, setState] = useState({});\n  const { useEffect } = React;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTickets());\n  }, []);\n\n  const isFetchingTickets = useSelector(\n    (state) => state.tickets?.isFetchingTickets\n  );\n  const fetchTicketsResult = useSelector(\n    (state) => state.tickets.fetchTicketsResult\n  );\n\n  let searchInput = useRef(null);\n  const toggleswitched = (e) => {\n    setState({ ...state, switcher: e });\n  };\n  const toggleChecked = (e) => {\n    setState({ ...state, checked: e.target.checked });\n  };\n  const { Option } = Select;\n\n  const [addNew, setAddNew] = React.useState({\n    subject: \"\",\n    description: \"\",\n    deadline: \"\",\n    visible: false,\n  });\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys}\n          onChange={(e) => {\n            setSelectedKeys([e.target.value] ? [e.target.value] : \"\");\n          }}\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.select(), 100);\n      }\n    },\n    render: (text) => {\n      if (state.searchedColumn === dataIndex)\n        return (\n          <Highlighter\n            highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n            searchWords={[state.searchText]}\n            autoEscape\n            textToHighlight={text ? text.toString() : \"\"}\n          />\n        );\n      else return text;\n    },\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setState({ searchedColumn: dataIndex, searchText: selectedKeys[0] });\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setState({ ...state, searchText: \"\" });\n  };\n\n  const columns = [\n    {\n      title: \"Intitulé\",\n      dataIndex: \"subject\",\n      key: \"subject\",\n      width: \"25%\",\n      align: \"center\",\n      ...getColumnSearchProps(\"subject\"),\n    },\n    {\n      title: \"Date de création\",\n      dataIndex: \"openAt\",\n      key: \"openAt\",\n      width: \"25%\",\n      align: \"center\",\n      render: (text) => {\n        return moment(text).format(\"DD/MM/yyyy\");\n      },\n    },\n    {\n      title: \"Deadline\",\n      dataIndex: \"deadline\",\n      key: \"deadline\",\n      width: \"25%\",\n      align: \"center\",\n      render: (text) => {\n        return moment(text).format(\"DD/MM/yyyy\");\n      },\n    },\n    {\n      title: \"Etat\",\n      dataIndex: \"status\",\n      key: \"status\",\n      align: \"center\",\n      width: \"25%\",\n      filters: [\n        {\n          text: \"Nouveau\",\n          value: \"Nouveau\",\n        },\n        {\n          text: \"en cours\",\n          value: \"en cours\",\n        },\n        {\n          text: \"terminé\",\n          value: \"termine\",\n        },\n      ],\n\n      filterMultiple: false,\n      onFilter: (value, record) => record.status.indexOf(value) === 0,\n      filterSearch: true,\n      render: (text) => {\n        const colors = {\n          Nouveau: \"blue\",\n          \"en cours\": \"orange\",\n          termine: \"green\",\n        };\n        return <Tag color={colors[text]}>{text.toUpperCase()}</Tag>;\n      },\n    },\n    {\n      title: \"plus\",\n      align: \"center\",\n      width: \"25%\",\n\n      render: (text) => {\n        return text.status === \"termine\" ? (\n          <div>\n            <Button\n              icon={<EditOutlined />}\n              size=\"large\"\n              onClick={() =>\n                history.push(\"/dashboard/tickets/termine/\" + text._id)\n              }\n            >\n              {\" \"}\n              Afficher plus\n            </Button>\n          </div>\n        ) : (\n          \"---\"\n        );\n      },\n    },\n  ];\n  function onChange(pagination, filters, sorter, extra, from_date, to_date) {\n    if (!from_date) {\n      dispatch(setFilters(filters));\n      dispatch(setPage(1));\n      dispatch(\n        fetchTickets({\n          ...filters,\n          page: 1,\n        })\n      );\n    } else {\n      dispatch(setFilters(filters));\n      dispatch(setPage(1));\n\n      dispatch(\n        fetchTickets({\n          ...filters,\n          page: 1,\n        })\n      );\n    }\n  }\n\n  // const uploadProps = {\n  //   onRemove: (file) => {\n  //     const index = state.fileList.indexOf(file);\n  //     const newFileList = state.fileList.slice();\n  //     newFileList.splice(index, 1);\n  //     setState({ ...state, fileList: newFileList });\n  //   },\n  //   beforeUpload: (file) => {\n  //     // setState({\n  //     //   ...state,\n  //     //   fileList: [...state.fileList, file],\n  //     // });\n  //     console.log(\"============  uploaaaaaad\");\n  //     dispatch(\n  //       fetchUploadCategoryImage({ categoryImage: editCategory._id }, file)\n  //     );\n  //     return false;\n  //   },\n  //   fileList: state.fileList,\n  // };\n  const handleaddNew = () => {\n    if (\n      addNew.subjet === \"\" ||\n      addNew.description === \"\" ||\n      addNew.deadline === \"\"\n    ) {\n      message.error(\"Merci de compléter tous les champs!\");\n    } else {\n      let my_edit = addNew;\n\n      delete my_edit.visible;\n\n      dispatch(AddnewTicket({ ...my_edit }));\n      setAddNew({ ...addNew, visible: false });\n    }\n  };\n  const getDateValue = (dateString) => {\n    setAddNew({ ...addNew, deadline: dateString });\n  };\n  const checkNotifications = () => {\n    fetchTicketsResult?.result?.map(\n      (element) =>\n        element.downloaded === false &&\n        element.status === \"termine\" &&\n        notification.info({\n          message: element.subject,\n          description:\n            'Le ticket \" ' +\n            element.subject +\n            '\"a été terminé, cliquez ici pour obtenir les détails du ticket',\n          placement: \"topRight\",\n          duration: 5,\n          onClick: () => {\n            history.push(\"/dashboard/tickets/termine/\" + element._id);\n          },\n        })\n    );\n  };\n\n  return (\n    <div>\n      <Row gutter={[25, 5]} style={{ padding: 10, marginTop: 0 }}>\n        <Col span={24}>\n          <Contt style={{ margin: \"0 16px\" }}>\n            <div\n              style={{\n                background: \"white\",\n                maxHeight: \"100%\",\n                padding: 24,\n                margin: \"8px 0px\",\n              }}\n            >\n              <h1 style={{ fontSize: \"35px\" }}> La liste des tickets</h1>\n              <Button\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={() => setAddNew({ ...addNew, visible: true })}\n              >\n                Créer un ticket\n              </Button>\n              <span className=\"tab\">\n                {\" \"}\n                <Button\n                  type=\"primary\"\n                  icon={<CheckCircleOutlined />}\n                  onClick={checkNotifications}\n                >\n                  Vérifier les notifications{\" \"}\n                </Button>\n              </span>\n\n              <Switch\n                style={{ margin: \"auto\", color: \"red\" }}\n                onClick={toggleswitched}\n                checkedChildren=\"Après\"\n                unCheckedChildren=\"Avant\"\n                defaultunChecked\n              />\n            </div>\n\n            {addNew?.visible && (\n              <Modal\n                title={\"Nouveau ticket\"}\n                centered\n                visible={addNew?.visible}\n                onOk={handleaddNew}\n                onCancel={() => setAddNew({ ...addNew, visible: false })}\n                width={600}\n                okText=\"Créer un ticket\"\n                cancelText=\"Annuler la création\"\n              >\n                <Row>\n                  <Col span={8}>\n                    <Text type=\"secondary\" style={{ fontSize: \"20px\" }}>\n                      L'intitulé:\n                    </Text>\n                  </Col>\n                  <Col span={16}>\n                    {\" \"}\n                    <Input\n                      onChange={(e) =>\n                        setAddNew({\n                          ...addNew,\n                          subject: e.target.value,\n                        })\n                      }\n                      value={addNew.subject}\n                      style={{\n                        width: \"369px\",\n                        height: 30,\n                        marginBottom: 8,\n                        marginTop: 8,\n                        fontSize: \"15px\",\n                        display: \"block\",\n                      }}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col span={8}>\n                    <Text type=\"secondary\" style={{ fontSize: \"20px\" }}>\n                      Déscription:\n                    </Text>\n                  </Col>\n                  <Col span={16}>\n                    {\" \"}\n                    <TextArea\n                      rows={4}\n                      onChange={(e) =>\n                        setAddNew({\n                          ...addNew,\n                          description: e.target.value,\n                        })\n                      }\n                      //value={addIdentity?.slug}\n                      value={addNew.description}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col span={8} style={{ marginTop: 8 }}>\n                    <Text type=\"secondary\" style={{ fontSize: \"20px\" }}>\n                      Deadline:\n                    </Text>\n                  </Col>\n                  <Col span={16}>\n                    {\" \"}\n                    <DatePicker\n                      style={{ marginTop: 8 }}\n                      onChange={getDateValue}\n                    />\n                  </Col>\n                </Row>\n              </Modal>\n            )}\n            <Row style={{ background: \"#fff\" }}>\n              <Table\n                pagination={false}\n                rowKey=\"_id\"\n                tableLayout=\"fixed\"\n                columns={columns}\n                dataSource={fetchTicketsResult?.result}\n                loading={isFetchingTickets}\n                style={{ padding: 24, minHeight: \"100%\" }}\n                // size=\"small\"\n                //scroll={{ x: '100vw' }}\n              />\n            </Row>\n          </Contt>\n          <Footer style={{ marginTop: 10, background: \"#fff\" }}>\n            <Row justify=\"end\">\n              <Col>\n                Nombre total de tickets: {fetchTicketsResult?.result?.length}\n              </Col>\n              {console.log(\"length\", fetchTicketsResult?.result?.length)}\n            </Row>\n          </Footer>\n        </Col>\n      </Row>\n    </div>\n  );\n};\nexport default Clients;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { newTicketsUrl, updateTicketsEnCoursUrl } from \"../../Constants\";\nimport axios from \"axios\";\nimport { message } from \"antd\";\nimport { act } from \"@testing-library/react\";\n\nconst initState = {\n  fetchTicketsResult: null,\n  fetchTicketsError: null,\n  isFetchingNewTickets: false,\n  updateTicket: false,\n  value: 2,\n  pathname: \"/\",\n  nbreOfDocs: 0,\n  filters: null,\n  page: 1,\n};\n\nexport const ticketsSlice = createSlice({\n  name: \"Tickets\",\n  initialState: initState,\n  reducers: {\n    setPathname: (state, action) => {\n      state.pathname = action.payload;\n    },\n    setNewTicketsResult: (state, action) => {\n      state.fetchTicketsResult = action.payload;\n      if (action.payload.nbreOfDocs)\n        state.nbreOfDocs = action.payload.nbreOfDocs;\n      state.isFetchingNewTickets = false;\n    },\n    setNewTicketsError: (state, action) => {\n      state.fetchTicketsError = action.payload;\n      state.isFetchingNewTickets = false;\n    },\n    setFetchingNewTickets: (state, action) => {\n      if (action.payload) {\n        state.fetchTicketsError = null;\n        state.fetchTicketsResult = null;\n      }\n      state.isFetchingNewTickets = action.payload;\n    },\n    SetUpdateTicketStatus: (state, action) => {\n      state.updateTicketStatus = true;\n    },\n    setFilters: (state, action) => {\n      state.filters = action.payload;\n    },\n    setPage: (state, action) => {\n      state.page = action.payload;\n    },\n  },\n});\n\nexport const {\n  setPathname,\n  setNewTicketsResult,\n  setNewTicketsError,\n  setFetchingNewTickets,\n  SetUpdateTicketStatus,\n  setFilters,\n  setPage,\n} = ticketsSlice.actions;\n\nexport const fetchNewTickets = (data) => (dispatch, getState) => {\n  const config = {\n    method: \"get\",\n    url: newTicketsUrl,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.token,\n    },\n    data,\n  };\n  dispatch(setFetchingNewTickets(true));\n\n  const response = axios(config)\n    .then((response) => {\n      dispatch(setNewTicketsResult(response.data));\n    })\n    .catch((response) => {\n      dispatch(setNewTicketsError(response.message));\n    });\n\n  return response.data;\n};\n// --------------------------------------------\n// --------------------------------------------\nexport const updateTicketsEnCours = (data) => (dispatch, getState) => {\n  const config = {\n    method: \"patch\",\n    url: updateTicketsEnCoursUrl + data._id,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.token,\n    },\n  };\n\n  const response = axios(config)\n    .then((response) => {\n      message.success(\"updated successfully\");\n      dispatch(SetUpdateTicketStatus());\n    })\n    .catch((response) => {\n      message.error(\"error while updating status\");\n    });\n\n  return response.data;\n};\n// ---------------------------------------------------------------------\n// --------------------------------------------------------------------\n\nexport const selectCount = (state) => state.dashboard.value;\n\nexport default ticketsSlice.reducer;\n","import React, { useRef, useState } from \"react\";\nimport {\n  Button,\n  Row,\n  Col,\n  Input,\n  Space,\n  Breadcrumb,\n  Radio,\n  Table,\n  Spin,\n  Pagination,\n  Popconfirm,\n  DatePicker,\n  Tag,\n} from \"antd\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport { SearchOutlined, PlusOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchNewTickets,\n  updateTicketsEnCours,\n  setFilters,\n  setPage,\n} from \"./ticketNouveauSlice\";\nimport Highlighter from \"react-highlight-words\";\nimport Title from \"antd/lib/skeleton/Title\";\nimport { Switch } from \"react-router-dom\";\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\nimport { Footer } from \"antd/lib/layout/layout\";\nimport moment from \"moment\";\nimport {\n  useHistory,\n  useParams,\n} from \"react-router-dom/cjs/react-router-dom.min\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Select } from \"antd\";\nconst { TextArea } = Input;\n\nconst Contt = ({ children, extra }) => {\n  return (\n    <div className=\"content\">\n      <div className=\"main\">{children}</div>\n      <div className=\"extra\">{extra}</div>\n    </div>\n  );\n};\nconst { RangePicker } = DatePicker;\nconst Clients = () => {\n  let history = useHistory();\n  const [state, setState] = useState({});\n  const { useEffect } = React;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchNewTickets());\n  }, []);\n\n  const isFetchingTickets = useSelector(\n    (state) => state.newTickets?.isFetchingTickets\n  );\n  const fetchTicketsResult = useSelector(\n    (state) => state.newTickets.fetchTicketsResult\n  );\n\n  let searchInput = useRef(null);\n  const toggleswitched = (e) => {\n    setState({ ...state, switcher: e });\n  };\n  const toggleChecked = (e) => {\n    setState({ ...state, checked: e.target.checked });\n  };\n  const { Option } = Select;\n\n  const [addNew, setAddNew] = React.useState({\n    subject: \"\",\n    description: \"\",\n    deadline: \"\",\n    visible: false,\n  });\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys}\n          onChange={(e) => {\n            setSelectedKeys(e.target.value ? e.target.value : \"\");\n          }}\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.select(), 100);\n      }\n    },\n    render: (text) => {\n      if (state.searchedColumn === dataIndex)\n        return (\n          <Highlighter\n            highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n            searchWords={[state.searchText]}\n            autoEscape\n            textToHighlight={text ? text.toString() : \"\"}\n          />\n        );\n      else return text;\n    },\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setState({ searchedColumn: dataIndex, searchText: selectedKeys[0] });\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setState({ ...state, searchText: \"\" });\n  };\n\n  const columns = [\n    {\n      title: \"Intitulé\",\n      dataIndex: \"subject\",\n      key: \"subject\",\n      width: \"25%\",\n      align: \"center\",\n      ...getColumnSearchProps(\"subject\"),\n    },\n    {\n      title: \"Date de création\",\n      dataIndex: \"openAt\",\n      key: \"openAt\",\n      width: \"25%\",\n      align: \"center\",\n      render: (text) => {\n        return moment(text).format(\"DD/MM/yyyy\");\n      },\n    },\n    {\n      title: \"Deadline\",\n      dataIndex: \"deadline\",\n      key: \"deadline\",\n      width: \"25%\",\n      align: \"center\",\n      render: (text) => {\n        return moment(text).format(\"DD/MM/yyyy\");\n      },\n    },\n    {\n      title: \"Actions\",\n      width: \"25%\",\n      align: \"center\",\n      dataIndex: \"_id\",\n      key: \"_id\",\n      render: (_id) => {\n        return (\n          <Popconfirm\n            placement=\"topLeft\"\n            title=\"Vous voulez vraiment prendre ce ticket !\"\n            onConfirm={() => {\n              dispatch(updateTicketsEnCours({ _id }));\n            }}\n            okText=\"OUI\"\n            cancelText=\"NON\"\n            style={{\n              width: \"500px\",\n              height: \"100px\",\n              borderRadius: \"20px\",\n              backgroundColor: \"#10101088\",\n              backdropFilter: \"blur(0.7rem)\",\n            }}\n          >\n            <Button type=\"link\">PRENDRE</Button>\n          </Popconfirm>\n        );\n      },\n    },\n  ];\n  function onChange(pagination, filters, sorter, extra, from_date, to_date) {\n    if (!from_date) {\n      dispatch(setFilters(filters));\n      dispatch(setPage(1));\n      dispatch(\n        fetchNewTickets({\n          ...filters,\n          page: 1,\n        })\n      );\n    } else {\n      dispatch(setFilters(filters));\n      dispatch(setPage(1));\n\n      dispatch(\n        fetchNewTickets({\n          ...filters,\n          page: 1,\n        })\n      );\n    }\n  }\n\n  // const uploadProps = {\n  //   onRemove: (file) => {\n  //     const index = state.fileList.indexOf(file);\n  //     const newFileList = state.fileList.slice();\n  //     newFileList.splice(index, 1);\n  //     setState({ ...state, fileList: newFileList });\n  //   },\n  //   beforeUpload: (file) => {\n  //     // setState({\n  //     //   ...state,\n  //     //   fileList: [...state.fileList, file],\n  //     // });\n  //     console.log(\"============  uploaaaaaad\");\n  //     dispatch(\n  //       fetchUploadCategoryImage({ categoryImage: editCategory._id }, file)\n  //     );\n  //     return false;\n  //   },\n  //   fileList: state.fileList,\n  // };\n\n  return (\n    <div>\n      <Row gutter={[25, 5]} style={{ padding: 10, marginTop: 0 }}>\n        <Col span={24}>\n          <Contt style={{ margin: \"0 16px\" }}>\n            <div\n              style={{\n                background: \"white\",\n                maxHeight: \"100%\",\n                padding: 24,\n                margin: \"8px 0px\",\n              }}\n            >\n              <h1 style={{ fontSize: \"35px\" }}>\n                {\" \"}\n                La liste des nouveaux tickets\n              </h1>\n              <Switch\n                style={{ margin: \"auto\", color: \"red\" }}\n                onClick={toggleswitched}\n                checkedChildren=\"Après\"\n                unCheckedChildren=\"Avant\"\n                defaultunChecked\n              />\n            </div>\n            <Row style={{ background: \"#fff\" }}>\n              <Table\n                pagination={false}\n                rowKey=\"_id\"\n                tableLayout=\"fixed\"\n                columns={columns}\n                dataSource={fetchTicketsResult?.result}\n                loading={isFetchingTickets}\n                style={{ padding: 24, minHeight: \"100%\" }}\n                // size=\"small\"\n                //scroll={{ x: '100vw' }}\n              />\n            </Row>\n          </Contt>\n          <Footer style={{ marginTop: 10, background: \"#fff\" }}>\n            <Row justify=\"end\">\n              <Col>\n                Nombre total de tickets: {fetchTicketsResult?.result.length}\n              </Col>\n              {console.log(\"length\", fetchTicketsResult?.result.length)}\n            </Row>\n          </Footer>\n        </Col>\n      </Row>\n    </div>\n  );\n};\nexport default Clients;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { ticketsEncoursUrl, updateTicketsEnCoursUrl } from \"../../Constants\";\nimport axios from \"axios\";\nimport { message } from \"antd\";\nimport { act } from \"@testing-library/react\";\n\nconst initState = {\n  fetchTicketsResult: null,\n  fetchTicketsError: null,\n  isFetchingEncoursTickets: false,\n  updateTicket: false,\n  value: 2,\n  pathname: \"/\",\n  nbreOfDocs: 0,\n  filters: null,\n  page: 1,\n};\n\nexport const ticketsSlice = createSlice({\n  name: \"Tickets\",\n  initialState: initState,\n  reducers: {\n    setPathname: (state, action) => {\n      state.pathname = action.payload;\n    },\n    setEncoursTicketsResult: (state, action) => {\n      state.fetchTicketsResult = action.payload;\n      if (action.payload.nbreOfDocs)\n        state.nbreOfDocs = action.payload.nbreOfDocs;\n      state.isFetchingEncoursTickets = false;\n    },\n    setEncoursTicketsError: (state, action) => {\n      state.fetchTicketsError = action.payload;\n      state.isFetchingEncoursTickets = false;\n    },\n    setFetchingEncoursTickets: (state, action) => {\n      if (action.payload) {\n        state.fetchTicketsError = null;\n        state.fetchTicketsResult = null;\n      }\n      state.isFetchingEncoursTickets = action.payload;\n    },\n    SetUpdateTicketStatus: (state, action) => {\n      state.updateTicketStatus = true;\n    },\n    setFilters: (state, action) => {\n      state.filters = action.payload;\n    },\n    setPage: (state, action) => {\n      state.page = action.payload;\n    },\n  },\n});\n\nexport const {\n  setPathname,\n  setEncoursTicketsResult,\n  setEncoursTicketsError,\n  setFetchingEncoursTickets,\n  SetUpdateTicketStatus,\n  setFilters,\n  setPage,\n} = ticketsSlice.actions;\n\nexport const fetchEncoursTickets = (data) => (dispatch, getState) => {\n  const config = {\n    method: \"get\",\n    url: ticketsEncoursUrl,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.token,\n    },\n    data,\n  };\n  dispatch(setFetchingEncoursTickets(true));\n\n  const response = axios(config)\n    .then((response) => {\n      dispatch(setEncoursTicketsResult(response.data));\n    })\n    .catch((response) => {\n      dispatch(setEncoursTicketsError(response.message));\n    });\n\n  return response.data;\n};\n// --------------------------------------------\n// --------------------------------------------\nexport const updateTicketsEnCours = (data) => (dispatch, getState) => {\n  const config = {\n    method: \"patch\",\n    url: updateTicketsEnCoursUrl + data._id,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.token,\n    },\n  };\n\n  const response = axios(config)\n    .then((response) => {\n      message.success(\"updated successfully\");\n      dispatch(SetUpdateTicketStatus());\n    })\n    .catch((response) => {\n      message.error(\"error while updating status\");\n    });\n\n  return response.data;\n};\n// ---------------------------------------------------------------------\n// --------------------------------------------------------------------\n\nexport const selectCount = (state) => state.dashboard.value;\n\nexport default ticketsSlice.reducer;\n","import React, { useRef, useState } from \"react\";\nimport {\n  Button,\n  Row,\n  Col,\n  Input,\n  Space,\n  Breadcrumb,\n  Radio,\n  Table,\n  Spin,\n  Pagination,\n  Popconfirm,\n  DatePicker,\n  Tag,\n} from \"antd\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport { SearchOutlined, PlusOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchEncoursTickets,\n  updateTicketsEnCours,\n  setFilters,\n  setPage,\n} from \"./ticketEnCoursSlice\";\n\nimport Highlighter from \"react-highlight-words\";\nimport Title from \"antd/lib/skeleton/Title\";\nimport { Switch } from \"react-router-dom\";\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\nimport { Footer } from \"antd/lib/layout/layout\";\nimport moment from \"moment\";\nimport {\n  useHistory,\n  useParams,\n} from \"react-router-dom/cjs/react-router-dom.min\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Select } from \"antd\";\nconst { TextArea } = Input;\n\nconst Contt = ({ children, extra }) => {\n  return (\n    <div className=\"content\">\n      <div className=\"main\">{children}</div>\n      <div className=\"extra\">{extra}</div>\n    </div>\n  );\n};\nconst { RangePicker } = DatePicker;\nconst Clients = () => {\n  let history = useHistory();\n  const [state, setState] = useState({});\n  const { useEffect } = React;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchEncoursTickets());\n  }, []);\n\n  const isFetchingTickets = useSelector(\n    (state) => state.encoursTickets?.isFetchingTickets\n  );\n  const fetchTicketsResult = useSelector(\n    (state) => state.encoursTickets.fetchTicketsResult\n  );\n\n  let searchInput = useRef(null);\n  const toggleswitched = (e) => {\n    setState({ ...state, switcher: e });\n  };\n  const toggleChecked = (e) => {\n    setState({ ...state, checked: e.target.checked });\n  };\n  const { Option } = Select;\n\n  const [addNew, setAddNew] = React.useState({\n    subject: \"\",\n    description: \"\",\n    deadline: \"\",\n    visible: false,\n  });\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys}\n          onChange={(e) => {\n            setSelectedKeys(e.target.value ? e.target.value : \"\");\n          }}\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.select(), 100);\n      }\n    },\n    render: (text) => {\n      if (state.searchedColumn === dataIndex)\n        return (\n          <Highlighter\n            highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n            searchWords={[state.searchText]}\n            autoEscape\n            textToHighlight={text ? text.toString() : \"\"}\n          />\n        );\n      else return text;\n    },\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setState({ searchedColumn: dataIndex, searchText: selectedKeys[0] });\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setState({ ...state, searchText: \"\" });\n  };\n\n  const columns = [\n    {\n      title: \"Intitulé\",\n      dataIndex: \"subject\",\n      key: \"subject\",\n      width: \"25%\",\n      align: \"center\",\n      ...getColumnSearchProps(\"subject\"),\n    },\n    {\n      title: \"Date de création\",\n      dataIndex: \"openAt\",\n      key: \"openAt\",\n      width: \"25%\",\n      align: \"center\",\n      render: (text) => {\n        return moment(text).format(\"DD/MM/yyyy\");\n      },\n    },\n    {\n      title: \"Deadline\",\n      dataIndex: \"deadline\",\n      key: \"deadline\",\n      width: \"25%\",\n      align: \"center\",\n      render: (text) => {\n        return moment(text).format(\"DD/MM/yyyy\");\n      },\n    },\n    {\n      title: \"Actions\",\n      width: \"25%\",\n      align: \"center\",\n      dataIndex: \"_id\",\n      key: \"_id\",\n      render: (_id) => {\n        return (\n          <Button\n            type=\"link\"\n            icon={<EditOutlined />}\n            onClick={(e) => history.push(\"/dashboard/tickets/encours/\" + _id)}\n          >\n            MANAGE\n          </Button>\n        );\n      },\n    },\n  ];\n  function onChange(pagination, filters, sorter, extra, from_date, to_date) {\n    if (!from_date) {\n      dispatch(setFilters(filters));\n      dispatch(setPage(1));\n      dispatch(\n        fetchEncoursTickets({\n          ...filters,\n          page: 1,\n        })\n      );\n    } else {\n      dispatch(setFilters(filters));\n      dispatch(setPage(1));\n\n      dispatch(\n        fetchEncoursTickets({\n          ...filters,\n          page: 1,\n        })\n      );\n    }\n  }\n\n  // const uploadProps = {\n  //   onRemove: (file) => {\n  //     const index = state.fileList.indexOf(file);\n  //     const newFileList = state.fileList.slice();\n  //     newFileList.splice(index, 1);\n  //     setState({ ...state, fileList: newFileList });\n  //   },\n  //   beforeUpload: (file) => {\n  //     // setState({\n  //     //   ...state,\n  //     //   fileList: [...state.fileList, file],\n  //     // });\n  //     console.log(\"============  uploaaaaaad\");\n  //     dispatch(\n  //       fetchUploadCategoryImage({ categoryImage: editCategory._id }, file)\n  //     );\n  //     return false;\n  //   },\n  //   fileList: state.fileList,\n  // };\n\n  return (\n    <div>\n      <Row gutter={[25, 5]} style={{ padding: 10, marginTop: 0 }}>\n        <Col span={24}>\n          <Contt style={{ margin: \"0 16px\" }}>\n            <div\n              style={{\n                background: \"white\",\n                maxHeight: \"100%\",\n                padding: 24,\n                margin: \"8px 0px\",\n              }}\n            >\n              <h1 style={{ fontSize: \"35px\" }}>\n                {\" \"}\n                La liste des tickets en cours de traitement\n              </h1>\n              <Switch\n                style={{ margin: \"auto\", color: \"red\" }}\n                onClick={toggleswitched}\n                checkedChildren=\"Après\"\n                unCheckedChildren=\"Avant\"\n                defaultunChecked\n              />\n            </div>\n            <Row style={{ background: \"#fff\" }}>\n              <Table\n                pagination={false}\n                rowKey=\"_id\"\n                tableLayout=\"fixed\"\n                columns={columns}\n                dataSource={fetchTicketsResult?.result}\n                loading={isFetchingTickets}\n                style={{ padding: 24, minHeight: \"100%\" }}\n                // size=\"small\"\n                //scroll={{ x: '100vw' }}\n              />\n            </Row>\n          </Contt>\n          <Footer style={{ marginTop: 10, background: \"#fff\" }}>\n            <Row justify=\"end\">\n              <Col>\n                Nombre total de tickets: {fetchTicketsResult?.result.length}\n              </Col>\n              {console.log(\"length\", fetchTicketsResult?.result.length)}\n            </Row>\n          </Footer>\n        </Col>\n      </Row>\n    </div>\n  );\n};\nexport default Clients;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { newTicketsUrl, ticketsTerminesUrl } from \"../../Constants\";\nimport axios from \"axios\";\nimport { message } from \"antd\";\nimport { act } from \"@testing-library/react\";\n\nconst initState = {\n  fetchTicketsResult: null,\n  fetchTicketsError: null,\n  isFetchingNewTickets: false,\n  updateTicket: false,\n  value: 2,\n  pathname: \"/\",\n  nbreOfDocs: 0,\n  filters: null,\n  page: 1,\n};\n\nexport const ticketsSlice = createSlice({\n  name: \"Tickets\",\n  initialState: initState,\n  reducers: {\n    setPathname: (state, action) => {\n      state.pathname = action.payload;\n    },\n    setNewTicketsResult: (state, action) => {\n      state.fetchTicketsResult = action.payload;\n      if (action.payload.nbreOfDocs)\n        state.nbreOfDocs = action.payload.nbreOfDocs;\n      state.isFetchingNewTickets = false;\n    },\n    setNewTicketsError: (state, action) => {\n      state.fetchTicketsError = action.payload;\n      state.isFetchingNewTickets = false;\n    },\n    setFetchingNewTickets: (state, action) => {\n      if (action.payload) {\n        state.fetchTicketsError = null;\n        state.fetchTicketsResult = null;\n      }\n      state.isFetchingNewTickets = action.payload;\n    },\n    SetUpdateTicketStatus: (state, action) => {\n      state.updateTicketStatus = true;\n    },\n    setFilters: (state, action) => {\n      state.filters = action.payload;\n    },\n    setPage: (state, action) => {\n      state.page = action.payload;\n    },\n  },\n});\n\nexport const {\n  setPathname,\n  setNewTicketsResult,\n  setNewTicketsError,\n  setFetchingNewTickets,\n  SetUpdateTicketStatus,\n  setFilters,\n  setPage,\n} = ticketsSlice.actions;\n\nexport const fetchTermineTickets = (data) => (dispatch, getState) => {\n  const config = {\n    method: \"get\",\n    url: ticketsTerminesUrl,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.token,\n    },\n    data,\n  };\n  dispatch(setFetchingNewTickets(true));\n\n  const response = axios(config)\n    .then((response) => {\n      dispatch(setNewTicketsResult(response.data));\n    })\n    .catch((response) => {\n      dispatch(setNewTicketsError(response.message));\n    });\n\n  return response.data;\n};\n// --------------------------------------------\n\nexport const selectCount = (state) => state.dashboard.value;\n\nexport default ticketsSlice.reducer;\n","import React, { useRef, useState } from \"react\";\nimport {\n  Button,\n  Row,\n  Col,\n  Input,\n  Space,\n  Breadcrumb,\n  Radio,\n  Table,\n  Spin,\n  Pagination,\n  Popconfirm,\n  DatePicker,\n  Tag,\n} from \"antd\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport { SearchOutlined, PlusOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchTermineTickets, setFilters, setPage } from \"./ticketTermineSlice\";\nimport Highlighter from \"react-highlight-words\";\nimport Title from \"antd/lib/skeleton/Title\";\nimport { Switch } from \"react-router-dom\";\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\nimport { Footer } from \"antd/lib/layout/layout\";\nimport moment from \"moment\";\nimport {\n  useHistory,\n  useParams,\n} from \"react-router-dom/cjs/react-router-dom.min\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Select } from \"antd\";\nconst { TextArea } = Input;\n\nconst Contt = ({ children, extra }) => {\n  return (\n    <div className=\"content\">\n      <div className=\"main\">{children}</div>\n      <div className=\"extra\">{extra}</div>\n    </div>\n  );\n};\nconst { RangePicker } = DatePicker;\nconst Clients = () => {\n  let history = useHistory();\n  const [state, setState] = useState({});\n  const { useEffect } = React;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTermineTickets());\n  }, []);\n\n  const isFetchingTickets = useSelector(\n    (state) => state.termineTickets?.isFetchingTickets\n  );\n  const fetchTicketsResult = useSelector(\n    (state) => state.termineTickets.fetchTicketsResult\n  );\n\n  let searchInput = useRef(null);\n  const toggleswitched = (e) => {\n    setState({ ...state, switcher: e });\n  };\n  const toggleChecked = (e) => {\n    setState({ ...state, checked: e.target.checked });\n  };\n  const { Option } = Select;\n\n  const [addNew, setAddNew] = React.useState({\n    subject: \"\",\n    description: \"\",\n    deadline: \"\",\n    visible: false,\n  });\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys}\n          onChange={(e) => {\n            setSelectedKeys(e.target.value ? e.target.value : \"\");\n          }}\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.select(), 100);\n      }\n    },\n    render: (text) => {\n      if (state.searchedColumn === dataIndex)\n        return (\n          <Highlighter\n            highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n            searchWords={[state.searchText]}\n            autoEscape\n            textToHighlight={text ? text.toString() : \"\"}\n          />\n        );\n      else return text;\n    },\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setState({ searchedColumn: dataIndex, searchText: selectedKeys[0] });\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setState({ ...state, searchText: \"\" });\n  };\n\n  const columns = [\n    {\n      title: \"Intitulé\",\n      dataIndex: \"subject\",\n      key: \"subject\",\n      width: \"25%\",\n      align: \"center\",\n      ...getColumnSearchProps(\"subject\"),\n    },\n    {\n      title: \"Date de création\",\n      dataIndex: \"openAt\",\n      key: \"openAt\",\n      width: \"25%\",\n      align: \"center\",\n      render: (text) => {\n        return moment(text).format(\"DD/MM/yyyy\");\n      },\n    },\n    {\n      title: \"Date de fin\",\n      dataIndex: \"endAt\",\n      key: \"endAt\",\n      width: \"25%\",\n      align: \"center\",\n      render: (text) => {\n        return moment(text).format(\"DD/MM/yyyy\");\n      },\n    },\n    {\n      title: \"Deadline\",\n      dataIndex: \"deadline\",\n      key: \"deadline\",\n      width: \"25%\",\n      align: \"center\",\n      render: (text) => {\n        return moment(text).format(\"DD/MM/yyyy\");\n      },\n    },\n  ];\n\n  // const uploadProps = {\n  //   onRemove: (file) => {\n  //     const index = state.fileList.indexOf(file);\n  //     const newFileList = state.fileList.slice();\n  //     newFileList.splice(index, 1);\n  //     setState({ ...state, fileList: newFileList });\n  //   },\n  //   beforeUpload: (file) => {\n  //     // setState({\n  //     //   ...state,\n  //     //   fileList: [...state.fileList, file],\n  //     // });\n  //     console.log(\"============  uploaaaaaad\");\n  //     dispatch(\n  //       fetchUploadCategoryImage({ categoryImage: editCategory._id }, file)\n  //     );\n  //     return false;\n  //   },\n  //   fileList: state.fileList,\n  // };\n\n  return (\n    <div>\n      <Row gutter={[25, 5]} style={{ padding: 10, marginTop: 0 }}>\n        <Col span={24}>\n          <Contt style={{ margin: \"0 16px\" }}>\n            <div\n              style={{\n                background: \"white\",\n                maxHeight: \"100%\",\n                padding: 24,\n                margin: \"8px 0px\",\n              }}\n            >\n              <h1 style={{ fontSize: \"35px\" }}>\n                {\" \"}\n                La liste des tickets terminés\n              </h1>\n              <Switch\n                style={{ margin: \"auto\", color: \"red\" }}\n                onClick={toggleswitched}\n                checkedChildren=\"Après\"\n                unCheckedChildren=\"Avant\"\n                defaultunChecked\n              />\n            </div>\n            <Row style={{ background: \"#fff\" }}>\n              <Table\n                pagination={false}\n                rowKey=\"_id\"\n                tableLayout=\"fixed\"\n                columns={columns}\n                dataSource={fetchTicketsResult?.result}\n                loading={isFetchingTickets}\n                style={{ padding: 24, minHeight: \"100%\" }}\n                // size=\"small\"\n                //scroll={{ x: '100vw' }}\n              />\n            </Row>\n          </Contt>\n          <Footer style={{ marginTop: 10, background: \"#fff\" }}>\n            <Row justify=\"end\">\n              <Col>\n                Nombre total de tickets: {fetchTicketsResult?.result.length}\n              </Col>\n              {console.log(\"length\", fetchTicketsResult?.result.length)}\n            </Row>\n          </Footer>\n        </Col>\n      </Row>\n    </div>\n  );\n};\nexport default Clients;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport {\n  getSingleTicketUrl,\n  uploadZipFileUrl,\n  updateTicketsCloseUrl,\n} from \"../../Constants\";\nimport axios from \"axios\";\nimport { message } from \"antd\";\nimport { act } from \"@testing-library/react\";\n\nconst initState = {\n  fetchSingleTicketResult: null,\n  fetchTicketsError: null,\n  isFetchingNewTickets: false,\n  fetchUploadZipFileResult: null,\n  fetchUploadZipFileError: null,\n  isFetchingUploadZipFile: false,\n  value: 2,\n  pathname: \"/\",\n  nbreOfDocs: 0,\n  filters: null,\n  page: 1,\n};\n\nexport const singleTicketSlice = createSlice({\n  name: \"singleTicket\",\n  initialState: initState,\n  reducers: {\n    setSingleTicketResult: (state, action) => {\n      state.fetchSingleTicketResult = action.payload;\n      state.isFetchingSingleTicket = false;\n    },\n    setSingleTicketError: (state, action) => {\n      state.fetchSingleTicketError = action.payload;\n      state.isFetchingSingleTicket = false;\n    },\n    setFetchingSingleTicket: (state, action) => {\n      if (action.payload) {\n        state.fetchSingleTicketError = null;\n        state.fetchSingleTicketResult = null;\n      }\n      state.isFetchingSingleTicket = action.payload;\n    },\n    setUploadZipFileResult: (state, action) => {\n      state.fetchUploadZipFileResult = action.payload;\n      state.isFetchingUploadZipFile = false;\n    },\n    setUploadZipFileError: (state, action) => {\n      state.fetchUploadZipFileError = action.payload;\n      state.isFetchingUploadZipFile = false;\n    },\n    setFetchingUploadZipFile: (state, action) => {\n      if (action.payload) {\n        state.fetchUploadZipFileResult = null;\n        state.fetchUploadZipFileError = null;\n      }\n      state.isFetchingUploadZipFile = action.payload;\n    },\n    setFilters: (state, action) => {\n      state.filters = action.payload;\n    },\n    setPage: (state, action) => {\n      state.page = action.payload;\n    },\n  },\n});\n\nexport const {\n  setSingleTicketResult,\n  setSingleTicketError,\n  setFetchingSingleTicket,\n  setUploadZipFileResult,\n  setUploadZipFileError,\n  setFetchingUploadZipFile,\n  setFilters,\n  setPage,\n} = singleTicketSlice.actions;\n\nexport const fetchSingleTicket = (data) => (dispatch, getState) => {\n  const config = {\n    method: \"get\",\n    url: getSingleTicketUrl + data._id,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.token,\n    },\n  };\n  console.log(\"start fetching ...\", data);\n  dispatch(setFetchingSingleTicket(true));\n\n  const response = axios(config)\n    .then((response) => {\n      dispatch(setSingleTicketResult(response.data));\n      console.log(\"single ticket\", response.data);\n      message.success(\"Ticket fetched successfully\");\n    })\n    .catch((response) => {\n      dispatch(setSingleTicketError(response.message));\n      message.error(\"Error while fetching single ticket \");\n    });\n\n  console.log(\"end fetching ...\");\n  console.log(response);\n  return response.data;\n};\n\n// ---------------------------------------------------------------------\n// --------------------------------------------------------------------\nexport const updateTicketFIle = (data) => (dispatch, getState) => {\n  const config = {\n    method: \"post\",\n    url: updateTicketsCloseUrl,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.token,\n    },\n    data,\n  };\n  console.log(\"close data\", data);\n  const response = axios(config)\n    .then((response) => {\n      message.success(\"Ticket terminé avec succes\");\n    })\n    .catch((response) => {\n      message.error(\"error while ending ticket\");\n    });\n\n  return response.data;\n};\n// ---------------------------------------------------------------------\n// --------------------------------------------------------------------\nexport const fetchUploadZipFile = (file) => (dispatch, getState) => {\n  let formData = new FormData();\n  formData.append(\"upload\", file);\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: localStorage.token,\n    },\n  };\n\n  dispatch(setFetchingUploadZipFile(true));\n  let url = uploadZipFileUrl;\n  let response = axios\n    .post(url, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: localStorage.token,\n      },\n    })\n    .then((response) => {\n      dispatch(setUploadZipFileResult(response.data.path));\n      message.success(\"Votre fichier zip a été uploadé avec succès !\");\n    })\n    .catch((response) => {\n      dispatch(setUploadZipFileError(response.message));\n      console.log(\"slice error\");\n    });\n\n  return response.data;\n};\n// ---------------------------------------------------------------------\n// --------------------------------------------------------------------\n\nexport const selectCount = (state) => state.dashboard.value;\n\nexport default singleTicketSlice.reducer;\n","import React, { useRef, useState } from \"react\";\nimport {\n  Button,\n  Row,\n  Col,\n  Input,\n  Space,\n  Breadcrumb,\n  Radio,\n  Table,\n  Spin,\n  Pagination,\n  DatePicker,\n  Tag,\n  Upload,\n  Result,\n  message,\n  Alert,\n} from \"antd\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchSingleTicket,\n  fetchUploadZipFile,\n  updateTicketFIle,\n} from \"./singleTicketSlice\";\nimport Highlighter from \"react-highlight-words\";\nimport Title from \"antd/lib/skeleton/Title\";\nimport { Switch } from \"react-router-dom\";\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\nimport { Footer } from \"antd/lib/layout/layout\";\nimport moment from \"moment\";\nimport { Descriptions } from \"antd\";\nimport {\n  useHistory,\n  useParams,\n} from \"react-router-dom/cjs/react-router-dom.min\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Select } from \"antd\";\nconst { TextArea } = Input;\n\nconst Contt = ({ children, extra }) => {\n  return (\n    <div className=\"content\">\n      <div className=\"main\">{children}</div>\n      <div className=\"extra\">{extra}</div>\n    </div>\n  );\n};\nconst { RangePicker } = DatePicker;\nconst Clients = () => {\n  const { _id } = useParams();\n  let history = useHistory();\n  const [state, setState] = useState({});\n  const { useEffect } = React;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchSingleTicket({ _id }));\n  }, []);\n\n  const isFetchingSingleTicket = useSelector(\n    (state) => state.singleTicket?.isFetchingSingleTicket\n  );\n  const fetchSingleTicketResult = useSelector(\n    (state) => state.singleTicket.fetchSingleTicketResult\n  );\n  const fetchuploadresult = useSelector(\n    (state) => state.singleTicket.fetchUploadZipFileResult\n  );\n\n  const [addNew, setAddNew] = React.useState({\n    subject: \"\",\n    description: \"\",\n    deadline: \"\",\n    visible: false,\n  });\n  const [notes, setNotes] = React.useState({\n    notes: \"\",\n    disabled: false,\n  });\n\n  const uploadProps = {\n    onRemove: (file) => {\n      const index = state.fileList.indexOf(file);\n      const newFileList = state.fileList.slice();\n      newFileList.splice(index, 1);\n      setState({ ...state, fileList: newFileList });\n    },\n    beforeUpload: (file) => {\n      // setState({\n      //   ...state,\n      //   fileList: [...state.fileList, file],\n      // });\n      dispatch(fetchUploadZipFile(file));\n      return false;\n    },\n    fileList: state.fileList,\n  };\n  const handleEnd = () => {\n    if (notes.notes && fetchuploadresult) {\n      setNotes({ ...notes, disabled: true });\n      console.log(\"notes.disabled\", notes.disabled);\n      dispatch(\n        updateTicketFIle({\n          _id,\n          notes: notes.notes,\n          path: fetchuploadresult,\n        })\n      );\n    } else message.error(\"Veuillez remplir tous les champs \");\n  };\n  return (\n    <div>\n      <Row gutter={[25, 5]} style={{ padding: 10, marginTop: 0 }}>\n        <Button type=\"link\" onClick={history.goBack}>\n          En cours /\n        </Button>\n        <Button type=\"text\">Ticket</Button>\n        <Col span={10}>\n          <Descriptions\n            layout=\"horizontal\"\n            bordered\n            style={{ marginTop: \"10%\" }}\n            column={{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }}\n          >\n            <Descriptions.Item label=\"Intitulé\">\n              {fetchSingleTicketResult?.result[0]?.subject}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Déscription\">\n              {fetchSingleTicketResult?.result[0]?.description}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Date de création\">\n              <Tag color=\"blue\">\n                {moment(fetchSingleTicketResult?.result[0]?.openAt).format(\n                  \"DD/MM/yyyy\"\n                )}\n              </Tag>\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Deadline\">\n              <Tag color=\"red\">\n                {moment(fetchSingleTicketResult?.result[0]?.deadline).format(\n                  \"DD/MM/yyyy\"\n                )}\n              </Tag>\n            </Descriptions.Item>\n          </Descriptions>\n        </Col>\n        {!notes.disabled && (\n          <Col span={8} style={{ marginTop: \"3%\" }}>\n            <Text type=\"secondary\" style={{ fontSize: \"20px\" }}>\n              Ajouter des remarques:\n            </Text>{\" \"}\n            <TextArea\n              rows={4}\n              onChange={(e) =>\n                setNotes({\n                  ...notes,\n                  notes: e.target.value,\n                })\n              }\n              //value={addIdentity?.slug}\n              value={notes.notes}\n            />\n            <span className=\"tab\" style={{ marginTop: \"8%\" }}>\n              <Upload {...uploadProps}>\n                <div\n                  className=\"file file--upload\"\n                  style={{\n                    border: \"1px ridge green\",\n                    borderRadius: \"4px\",\n                    backgroundColor: \"#93edb6\",\n                    padding: \"20px\",\n                  }}\n                >\n                  <label for=\"input-file\">\n                    <UploadOutlined />\n                    <span className=\"tab\"> Ratacher le fichier .zip</span>\n                  </label>\n                </div>\n              </Upload>\n              {fetchuploadresult && (\n                <Alert\n                  message=\"Votre fichier zip a été uploadé avec succès !\"\n                  type=\"success\"\n                  description={\n                    \"le nouveau nom du fichier est: \" + fetchuploadresult\n                  }\n                  showIcon\n                  closable\n                />\n              )}\n            </span>\n          </Col>\n        )}\n      </Row>\n\n      <Row style={{ marginTop: \"10%\" }}>\n        <Col span={6}></Col>\n\n        <Col span={6}>\n          {\" \"}\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            onClick={handleEnd}\n            disabled={notes.disabled}\n          >\n            Valider le fichier et terminer le ticket\n          </Button>\n        </Col>\n\n        <Col span={6}>\n          {\" \"}\n          <Button\n            size=\"large\"\n            onClick={() => history.push(\"/dashboard/tickets/termine\")}\n            type=\"link\"\n            disabled={!notes.disabled}\n          >\n            Consulter vos tickets terminés\n          </Button>\n        </Col>\n        <Col span={6}></Col>\n      </Row>\n    </div>\n  );\n};\nexport default Clients;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { updateDownloadedStatusUrl } from \"../../Constants\";\nimport axios from \"axios\";\nimport { message } from \"antd\";\nimport { act } from \"@testing-library/react\";\n\nconst initState = {\n  value: 2,\n  pathname: \"/\",\n  nbreOfDocs: 0,\n  filters: null,\n  page: 1,\n};\n\nexport const singleTicketSlice = createSlice({\n  name: \"singleTicket\",\n  initialState: initState,\n  reducers: {\n    setFilters: (state, action) => {\n      state.filters = action.payload;\n    },\n    setPage: (state, action) => {\n      state.page = action.payload;\n    },\n  },\n});\n\nexport const { setFilters, setPage } = singleTicketSlice.actions;\n\n// ---------------------------------------------------------------------\n// --------------------------------------------------------------------\nexport const updateDownloadedStatus = (data) => (dispatch, getState) => {\n  const config = {\n    method: \"patch\",\n    url: updateDownloadedStatusUrl + data._id,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.token,\n    },\n  };\n  console.log(\"jajajajaaj\", data);\n  const response = axios(config)\n    .then((response) => {\n      message.success(\"downloaded updated avec succes\");\n    })\n    .catch((response) => {\n      message.error(\"error while updating downloaded\");\n    });\n\n  return response.data;\n};\n\nexport const selectCount = (state) => state.dashboard.value;\n\nexport default singleTicketSlice.reducer;\n","import React, { useRef, useState } from \"react\";\nimport {\n  Button,\n  Row,\n  Col,\n  Input,\n  Space,\n  Breadcrumb,\n  Radio,\n  Table,\n  Spin,\n  Pagination,\n  DatePicker,\n  Tag,\n  Upload,\n  Result,\n  message,\n  Alert,\n} from \"antd\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchSingleTicket } from \"../singleTicket/singleTicketSlice\";\nimport { updateDownloadedStatus } from \"./ticketValidationSlice\";\nimport Highlighter from \"react-highlight-words\";\nimport Title from \"antd/lib/skeleton/Title\";\nimport { Switch } from \"react-router-dom\";\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\nimport { Footer } from \"antd/lib/layout/layout\";\nimport moment from \"moment\";\nimport { Descriptions } from \"antd\";\nimport { downloadFileZipUrl } from \"../../Constants\";\nimport { Typography } from \"antd\";\nimport {\n  useHistory,\n  useParams,\n} from \"react-router-dom/cjs/react-router-dom.min\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Select } from \"antd\";\nconst { Link } = Typography;\n\nconst Contt = ({ children, extra }) => {\n  return (\n    <div className=\"content\">\n      <div className=\"main\">{children}</div>\n      <div className=\"extra\">{extra}</div>\n    </div>\n  );\n};\nconst { RangePicker } = DatePicker;\nconst Clients = () => {\n  const { _id } = useParams();\n  let history = useHistory();\n  const [state, setState] = useState({});\n  const { useEffect } = React;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchSingleTicket({ _id }));\n  }, []);\n\n  const isFetchingSingleTicket = useSelector(\n    (state) => state.singleTicket?.isFetchingSingleTicket\n  );\n  const fetchSingleTicketResult = useSelector(\n    (state) => state.singleTicket.fetchSingleTicketResult\n  );\n  const fetchuploadresult = useSelector(\n    (state) => state.singleTicket.fetchUploadZipFileResult\n  );\n\n  const [addNew, setAddNew] = React.useState({\n    subject: \"\",\n    description: \"\",\n    deadline: \"\",\n    visible: false,\n  });\n  const [notes, setNotes] = React.useState({\n    notes: \"\",\n    disabled: false,\n  });\n  const handleUpdateDownloaded = () => {\n    dispatch(updateDownloadedStatus({ _id }));\n    window.open(\n      downloadFileZipUrl + fetchSingleTicketResult?.result[0]?.zipFile\n    );\n  };\n\n  return (\n    <div>\n      <Row gutter={[25, 5]} style={{ padding: 10, marginTop: 0 }}>\n        <Button type=\"link\">terminés /</Button>\n        <Button type=\"text\">Ticket</Button>\n        <Col offset={2} span={16}>\n          <Descriptions\n            layout=\"horizontal\"\n            bordered\n            style={{ marginTop: \"10%\" }}\n            column={{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }}\n          >\n            <Descriptions.Item label=\"Intitulé\">\n              {fetchSingleTicketResult?.result[0]?.subject}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Déscription\">\n              {fetchSingleTicketResult?.result[0]?.description}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Date de création\">\n              <Tag color=\"blue\">\n                {moment(fetchSingleTicketResult?.result[0]?.openAt).format(\n                  \"DD/MM/yyyy\"\n                )}\n              </Tag>\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Deadline\">\n              <Tag color=\"red\">\n                {moment(fetchSingleTicketResult?.result[0]?.deadline).format(\n                  \"DD/MM/yyyy\"\n                )}\n              </Tag>\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Terminé le\">\n              <Tag color=\"green\">\n                {moment(fetchSingleTicketResult?.result[0]?.endAt).format(\n                  \"DD/MM/yyyy\"\n                )}\n              </Tag>\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Remarques\">\n              {fetchSingleTicketResult?.result[0]?.notes}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Les données collectées\">\n              <Button size=\"large\" type=\"link\" onClick={handleUpdateDownloaded}>\n                Cliquez ici pour télécharger le fichier.Zip\n              </Button>\n            </Descriptions.Item>\n          </Descriptions>\n        </Col>\n      </Row>\n    </div>\n  );\n};\nexport default Clients;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { ticketsUrl, archivedTicketsUrl } from \"../../Constants\";\nimport axios from \"axios\";\nimport { message } from \"antd\";\nimport { act } from \"@testing-library/react\";\n\nconst initState = {\n  fetchTicketsResult: null,\n  fetchTicketsError: null,\n  isFetchingTickets: false,\n  value: 2,\n  pathname: \"/\",\n  nbreOfDocs: 0,\n  filters: null,\n  page: 1,\n};\n\nexport const usersSlice = createSlice({\n  name: \"Tickets\",\n  initialState: initState,\n  reducers: {\n    setPathname: (state, action) => {\n      state.pathname = action.payload;\n    },\n    setTicketsResult: (state, action) => {\n      state.fetchTicketsResult = action.payload;\n      if (action.payload.nbreOfDocs)\n        state.nbreOfDocs = action.payload.nbreOfDocs;\n      state.isFetchingTickets = false;\n    },\n    setTicketsError: (state, action) => {\n      state.fetchTicketsError = action.payload;\n      state.isFetchingTickets = false;\n    },\n    setFetchingTickets: (state, action) => {\n      if (action.payload) {\n        state.fetchTicketsError = null;\n        state.fetchTicketsResult = null;\n      }\n      state.isFetchingTickets = action.payload;\n    },\n    setFilters: (state, action) => {\n      state.filters = action.payload;\n    },\n    setPage: (state, action) => {\n      state.page = action.payload;\n    },\n  },\n});\n\nexport const {\n  setPathname,\n  setTicketsResult,\n  setTicketsError,\n  setFetchingTickets,\n  setFilters,\n  setPage,\n} = usersSlice.actions;\n\nexport const fetchTickets = (data) => (dispatch, getState) => {\n  const config = {\n    method: \"get\",\n    url: archivedTicketsUrl,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.token,\n    },\n    data,\n  };\n  dispatch(setFetchingTickets(true));\n\n  const response = axios(config)\n    .then((response) => {\n      dispatch(setTicketsResult(response.data));\n    })\n    .catch((response) => {\n      dispatch(setTicketsError(response.message));\n    });\n\n  return response.data;\n};\n// --------------------------------------------\n// --------------------------------------------\nexport const AddnewTicket = (data) => async (dispatch, getState) => {\n  const config = {\n    method: \"post\",\n    url: ticketsUrl,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.token,\n    },\n    data,\n  };\n\n  const response = await axios(config)\n    .then((response) => {\n      message.success(\"Ticket added successfully\");\n      dispatch(fetchTickets());\n    })\n    .catch((response) => {\n      message.error(\"Error while adding the ticket \");\n    });\n\n  return response;\n};\n// ---------------------------------------------------------------------\n// --------------------------------------------------------------------\n\nexport const selectCount = (state) => state.dashboard.value;\n\nexport default usersSlice.reducer;\n","import React, { useRef, useState } from \"react\";\nimport {\n  Button,\n  Row,\n  Col,\n  Input,\n  Space,\n  Breadcrumb,\n  Radio,\n  Table,\n  Spin,\n  notification,\n  DatePicker,\n  Tag,\n} from \"antd\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport { SearchOutlined, PlusOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchTickets,\n  setFilters,\n  setPage,\n  AddnewTicket,\n} from \"./ticketArchivedSlice\";\nimport Highlighter from \"react-highlight-words\";\nimport Title from \"antd/lib/skeleton/Title\";\nimport { Switch } from \"react-router-dom\";\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\nimport { Footer } from \"antd/lib/layout/layout\";\nimport moment from \"moment\";\nimport {\n  useHistory,\n  useParams,\n} from \"react-router-dom/cjs/react-router-dom.min\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Select } from \"antd\";\nconst { TextArea } = Input;\n\nconst Contt = ({ children, extra }) => {\n  return (\n    <div className=\"content\">\n      <div className=\"main\">{children}</div>\n      <div className=\"extra\">{extra}</div>\n    </div>\n  );\n};\nconst { RangePicker } = DatePicker;\nconst Clients = () => {\n  let history = useHistory();\n  const [state, setState] = useState({});\n  const { useEffect } = React;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTickets());\n  }, []);\n\n  const isFetchingTickets = useSelector(\n    (state) => state.ticketsArchived?.isFetchingTickets\n  );\n  const fetchTicketsResult = useSelector(\n    (state) => state.ticketsArchived.fetchTicketsResult\n  );\n  {\n    console.log(\"fetchTicketsResult\", fetchTicketsResult);\n  }\n  let searchInput = useRef(null);\n  const toggleswitched = (e) => {\n    setState({ ...state, switcher: e });\n  };\n  const toggleChecked = (e) => {\n    setState({ ...state, checked: e.target.checked });\n  };\n  const { Option } = Select;\n\n  const [addNew, setAddNew] = React.useState({\n    subject: \"\",\n    description: \"\",\n    deadline: \"\",\n    visible: false,\n  });\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys}\n          onChange={(e) => {\n            setSelectedKeys([e.target.value] ? [e.target.value] : \"\");\n          }}\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.select(), 100);\n      }\n    },\n    render: (text) => {\n      if (state.searchedColumn === dataIndex)\n        return (\n          <Highlighter\n            highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n            searchWords={[state.searchText]}\n            autoEscape\n            textToHighlight={text ? text.toString() : \"\"}\n          />\n        );\n      else return text;\n    },\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setState({ searchedColumn: dataIndex, searchText: selectedKeys[0] });\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setState({ ...state, searchText: \"\" });\n  };\n\n  const columns = [\n    {\n      title: \"Intitulé\",\n      dataIndex: \"subject\",\n      key: \"subject\",\n      width: \"25%\",\n      align: \"center\",\n      ...getColumnSearchProps(\"subject\"),\n    },\n    {\n      title: \"Date de création\",\n      dataIndex: \"openAt\",\n      key: \"openAt\",\n      width: \"25%\",\n      align: \"center\",\n      render: (text) => {\n        return moment(text).format(\"DD/MM/yyyy\");\n      },\n    },\n    {\n      title: \"Deadline\",\n      dataIndex: \"deadline\",\n      key: \"deadline\",\n      width: \"25%\",\n      align: \"center\",\n      render: (text) => {\n        return moment(text).format(\"DD/MM/yyyy\");\n      },\n    },\n    {\n      title: \"Etat\",\n      dataIndex: \"status\",\n      key: \"status\",\n      align: \"center\",\n      width: \"25%\",\n      render: (text) => {\n        const b = \"archivé\";\n        return <Tag color=\"grey\">{b.toUpperCase()}</Tag>;\n      },\n    },\n    {\n      title: \"plus\",\n      align: \"center\",\n      width: \"25%\",\n\n      render: (text) => {\n        return text.status === \"termine\" ? (\n          <div>\n            <Button\n              icon={<EditOutlined />}\n              size=\"large\"\n              onClick={() =>\n                history.push(\"/dashboard/tickets/termine/\" + text._id)\n              }\n            >\n              {\" \"}\n              Afficher plus\n            </Button>\n          </div>\n        ) : (\n          \"---\"\n        );\n      },\n    },\n  ];\n  function onChange(pagination, filters, sorter, extra, from_date, to_date) {\n    if (!from_date) {\n      dispatch(setFilters(filters));\n      dispatch(setPage(1));\n      dispatch(\n        fetchTickets({\n          ...filters,\n          page: 1,\n        })\n      );\n    } else {\n      dispatch(setFilters(filters));\n      dispatch(setPage(1));\n\n      dispatch(\n        fetchTickets({\n          ...filters,\n          page: 1,\n        })\n      );\n    }\n  }\n\n  const handleaddNew = () => {\n    let my_edit = addNew;\n\n    delete my_edit.visible;\n\n    dispatch(AddnewTicket({ ...my_edit }));\n    setAddNew({ ...addNew, visible: false });\n  };\n  const getDateValue = (dateString) => {\n    setAddNew({ ...addNew, deadline: dateString });\n  };\n\n  return (\n    <div>\n      <Row gutter={[25, 5]} style={{ padding: 10, marginTop: 0 }}>\n        <Col span={24}>\n          <Contt style={{ margin: \"0 16px\" }}>\n            <div\n              style={{\n                background: \"white\",\n                maxHeight: \"100%\",\n                padding: 24,\n                margin: \"8px 0px\",\n              }}\n            >\n              <h1 style={{ fontSize: \"35px\" }}>\n                {\" \"}\n                La liste des tickets archivés\n              </h1>\n              <Switch\n                style={{ margin: \"auto\", color: \"red\" }}\n                onClick={toggleswitched}\n                checkedChildren=\"Après\"\n                unCheckedChildren=\"Avant\"\n                defaultunChecked\n              />\n            </div>\n            <Row style={{ background: \"#fff\" }}>\n              <Table\n                pagination={false}\n                rowKey=\"_id\"\n                tableLayout=\"fixed\"\n                columns={columns}\n                dataSource={fetchTicketsResult?.result}\n                loading={isFetchingTickets}\n                style={{ padding: 24, minHeight: \"100%\" }}\n                // size=\"small\"\n                //scroll={{ x: '100vw' }}\n              />\n            </Row>\n          </Contt>\n          <Footer style={{ marginTop: 10, background: \"#fff\" }}>\n            <Row justify=\"end\">\n              <Col>\n                Nombre total de tickets: {fetchTicketsResult?.result.length}\n              </Col>\n              {console.log(\"lenth\", fetchTicketsResult?.result.length)}\n            </Row>\n          </Footer>\n        </Col>\n      </Row>\n    </div>\n  );\n};\nexport default Clients;\n","import React from \"react\";\nimport { Switch, Route, useHistory, Redirect } from \"react-router-dom\";\nimport \"./dashboard.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  Layout,\n  Menu,\n  Spin,\n  Avatar,\n  Alert,\n  Row,\n  Col,\n  Typography,\n  Popover,\n  Divider,\n  Button,\n  Image,\n  Badge,\n  Tag,\n} from \"antd\";\nimport {\n  UserOutlined,\n  AlignLeftOutlined,\n  LogoutOutlined,\n  LoadingOutlined,\n  SendOutlined,\n  FileProtectOutlined,\n  SafetyCertificateOutlined,\n} from \"@ant-design/icons\";\nimport { setPathname, fetchUserProfile } from \"./dashboardSlice\";\nimport { setredirectToDashboard } from \"../signin/signinSlice\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport Tickets from \"../tickets/ticket\";\nimport PendingTickets from \"../ticket-nouveau/ticketNouveau\";\nimport EncoursTickets from \"../ticket-encours/ticketEnCours\";\nimport TermineTickets from \"../ticket-termines/ticketTermine\";\nimport SingleTicket from \"../singleTicket/singleTicket\";\nimport ValidateTicket from \"../ticket-validation/ticketValidation\";\nimport TicketsArchive from \"../ticket-archived/ticketArchived\";\n\nconst { Header, Footer, Sider } = Layout;\nconst { Text } = Typography;\nconst { SubMenu } = Menu;\nlet keys = {\n  \"/dashboard/tickets\": \"tickets\",\n  \"/dashboard/tickets/pending\": \"pending\",\n  \"/dashboard/tickets/encours\": \"encours\",\n  \"/dashboard/tickets/termine\": \"termine\",\n  \"/dashboard/tickets/archive\": \"archive\",\n};\n\nlet Dashboard = ({}) => {\n  let history = useHistory();\n  let [state, setState] = React.useState({\n    collapsed: false,\n    current: \"\",\n  });\n\n  const dispatch = useDispatch();\n\n  const isFetchingProfile = useSelector(\n    (state) => state.dashboard?.isFetchingProfile\n  );\n  const fetchProfileResult = useSelector(\n    (state) => state.dashboard?.fetchProfileResult\n  );\n  const fetchProfileError = useSelector(\n    (state) => state.dashboard?.fetchProfileError\n  );\n  {\n    console.log(\"type\", fetchProfileResult?.user.type);\n  }\n  const { collapsed } = state;\n  const { useEffect } = React;\n  const onCollapse = (collapsed) => {\n    setState({ ...state, collapsed });\n  };\n\n  useEffect(() => {\n    dispatch(fetchUserProfile());\n    dispatch(setPathname(history.location.pathname));\n  }, [localStorage.token]);\n  const handlePageChange = (e) => {\n    setState({\n      current: e.key,\n    });\n    switch (e.key) {\n      case \"tickets\":\n        history.push(\"/dashboard/tickets\");\n        break;\n      case \"pending\":\n        history.push(\"/dashboard/tickets/pending\");\n        break;\n      case \"encours\":\n        history.push(\"/dashboard/tickets/encours\");\n        break;\n      case \"termine\":\n        history.push(\"/dashboard/tickets/termine\");\n        break;\n      case \"archive\":\n        history.push(\"/dashboard/tickets/archive\");\n        break;\n    }\n  };\n  const AvatarLoader = () => {\n    return (\n      <span>\n        <Badge dot>\n          <Avatar icon={<UserOutlined />} />\n        </Badge>\n      </span>\n    );\n  };\n  const content = (\n    <div>\n      <div>\n        <Row>\n          <Col>\n            {\" \"}\n            <h5>Nom:</h5>\n          </Col>\n          <Col>\n            <span className=\"tab\">\n              {\" \"}\n              <h5>{fetchProfileResult?.user.name}</h5>\n            </span>{\" \"}\n          </Col>\n        </Row>\n        <Divider />\n        <Row>\n          <Col>\n            {\" \"}\n            <h5>Email:</h5>{\" \"}\n          </Col>\n          <Col>\n            <span className=\"tab\">\n              {\" \"}\n              <h5>{fetchProfileResult?.user.email}</h5>\n            </span>{\" \"}\n          </Col>\n        </Row>\n        <Divider />\n        <Row>\n          <Col offset={6}>\n            {\" \"}\n            {fetchProfileResult?.user.type === \"assistantFr\" ? (\n              <Tag color=\"#FFD700\" style={{ fontSize: \"20px\" }}>Assistant FR </Tag>\n            ) : (\n              <Tag color=\"#C0C0C0\" style={{ fontSize: \"20px\" }}>Assistant DZ </Tag>\n            )}\n          </Col>\n        </Row>\n      </div>\n\n      <Divider />\n      <Button\n        block\n        size=\"medium\"\n        shape=\"round\"\n        //type=\"link\"\n        onClick={() => {\n          localStorage.removeItem(\"token\");\n          history.push(\"/signin\");\n        }}\n        style={{ backgroundColor: \"#FF0000\", color: \"white\" }}\n      >\n        <LogoutOutlined style={{ fontSize: \"20px\" }} />\n        Logout\n      </Button>\n    </div>\n  );\n  const AvatarProfile = ({}) => {\n    return (\n      <Popover content={content} trigger=\"click\">\n        <span>\n          <Badge dot>\n            <Avatar size={40} icon={<UserOutlined />} />\n          </Badge>\n        </span>\n      </Popover>\n    );\n  };\n  if (!localStorage.token) return <Redirect to=\"/signin\" />;\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\n        <div\n          style={{\n            margin: \"16px\",\n          }}\n        >\n          {!collapsed ? (\n            <Col\n              style={{\n                backgroundColor: \"#333\",\n                height: \"34px\",\n                borderRadius: \"7px\",\n              }}\n            ></Col>\n          ) : null}\n        </div>\n        <Menu\n          theme=\"dark\"\n          defaultSelectedKeys={[\"clients\"]}\n          mode=\"inline\"\n          onSelect={handlePageChange}\n          style={{ overflow: \"auto\" }}\n          selectedKeys={[state.current]}\n        >\n          {fetchProfileResult?.user.type === \"assistantFr\" && (\n            <Menu.Item key=\"tickets\" icon={<AlignLeftOutlined />}>\n              Tous les tickets\n            </Menu.Item>\n          )}\n          {fetchProfileResult?.user.type === \"assistantFr\" && (\n            <Menu.Item key=\"archive\" icon={<FileProtectOutlined />}>\n              Les tickets archivés\n            </Menu.Item>\n          )}\n\n          {fetchProfileResult?.user.type === \"assistantDz\" && (\n            <Menu.Item key=\"pending\" icon={<SendOutlined />}>\n              Les tickets disponibles\n            </Menu.Item>\n          )}\n          {fetchProfileResult?.user.type === \"assistantDz\" && (\n            <Menu.Item key=\"encours\" icon={<LoadingOutlined />}>\n              Les tickets en cours\n            </Menu.Item>\n          )}\n          {fetchProfileResult?.user.type === \"assistantDz\" && (\n            <Menu.Item key=\"termine\" icon={<SafetyCertificateOutlined />}>\n              Les tickets terminés\n            </Menu.Item>\n          )}\n        </Menu>\n      </Sider>\n      <Layout\n        className=\"site-layout\"\n        style={{ overflowY: \"scroll\", maxHeight: \"100vh\" }}\n      >\n        <Header\n          className=\"site-layout-background\"\n          style={{\n            padding: 0,\n          }}\n        >\n          <Row>\n            <Col xs={18}>\n              <Text></Text>\n            </Col>\n            <Col xs={6}>\n              <Row justify=\"center\">\n                <Col span={5}>\n                  <Badge\n                    count={0}\n                    size={60}\n                    offset={[0, 10]}\n                    style={{ marginLeft: 10 }}\n                  >\n                    {isFetchingProfile ? <Spin /> : <AvatarProfile />}\n                  </Badge>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row justify=\"center\">\n            <Col xs={24} md={12} lg={6}>\n              <Spin spinning={isFetchingProfile}></Spin>\n            </Col>\n          </Row>\n        </Header>\n        <Content>\n          <Switch>\n            <Route exact path=\"/dashboard/tickets\" component={Tickets} />\n            <Route\n              exact\n              path=\"/dashboard/tickets/encours/:_id\"\n              component={SingleTicket}\n            />\n            <Route\n              exact\n              path=\"/dashboard/tickets/archive\"\n              component={TicketsArchive}\n            />\n            <Route\n              exact\n              path=\"/dashboard/tickets/termine/:_id\"\n              component={ValidateTicket}\n            />\n            <Route\n              exact\n              path=\"/dashboard/tickets/pending\"\n              component={PendingTickets}\n            />\n            <Route\n              exact\n              path=\"/dashboard/tickets/encours\"\n              component={EncoursTickets}\n            />\n            <Route\n              exact\n              path=\"/dashboard/tickets/termine\"\n              component={TermineTickets}\n            />\n            <Route exact path=\"/dashboard/\" />\n          </Switch>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default Dashboard;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport signinReducer from \"../features/signin/signinSlice\";\nimport ticketsReducer from \"../features/tickets/ticketSlice\";\nimport newTicketsReducer from \"../features/ticket-nouveau/ticketNouveauSlice\";\nimport encoursTicketsReducer from \"../features/ticket-encours/ticketEnCoursSlice\";\nimport termineTicketsReducer from \"../features/ticket-termines/ticketTermineSlice\"\nimport singleTicketReducer from \"../features/singleTicket/singleTicketSlice\";\nimport ticketsArchivedReducer from \"../features/ticket-archived/ticketArchivedSlice\"\n// import statsReducer from \"../features/stats/StatsSlice\";\n// import templates from \"../features/templates/templatesSlice\";\n// import trackedImages from \"../features/trackedImages/trackedImagesSlice\";\n// import singleTrackedImage from \"../features/singleTrackedImage/singleTrackedImageSlice\";\n// import subscriptions from \"../features/subscriptions/subscriptionsSlice\";\n// import plans from \"../features/plans/plansSlice\";\nimport dashboardReducer from \"../features/dashboard/dashboardSlice\";\nimport singleUser from \"../features/user/userSlice\";\nexport default configureStore({\n  reducer: {\n    signin: signinReducer,\n    tickets: ticketsReducer,\n    dashboard: dashboardReducer,\n    newTickets: newTicketsReducer,\n    encoursTickets:encoursTicketsReducer,\n    singleTicket: singleTicketReducer,\n    termineTickets:termineTicketsReducer,\n    ticketsArchived:ticketsArchivedReducer,\n    // stats: statsReducer,\n    // templates: templates,\n    // trackedImages: trackedImages,\n    // singleTrackedImage: singleTrackedImage,\n    // subscriptions: subscriptions,\n    // plans: plans,\n    // singleUser: singleUser,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Signin from \"./features/signin/Signin\";\nimport Dashboard from \"./features/dashboard/Dashboard\";\nimport {\n  BrowserRouter,\n  Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Signin} />\n        <Route path=\"/signin\" component={Signin} />\n        <Route path=\"/dashboard\" component={Dashboard} />\n      </Switch>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.unregister();\n"],"sourceRoot":""}